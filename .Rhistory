date_breaks = "1 month", date_labels =  "%b %Y") +
geom_freqpoly(aes(color = cand_nm), binwidth = 7) +
geom_vline(xintercept=elec_date, color="purple") +
geom_vline(xintercept=republican_nomination_date, color="red") +
geom_vline(xintercept=democratic_nomination_date, color="blue") +
geom_vline(xintercept=republican_caucuses_date, color="red") +
geom_vline(xintercept=democratic_caucuses_date, color="blue") +
geom_vline(xintercept=hillary_email, color="gold") +
facet_wrap(~income_cut, ncol = 1, scales = "free_y") +
theme(axis.text.x=element_text(angle=60, hjust=1))
elec_date <- as.Date('2016-11-8')
republican_nomination_date <- as.Date('2016-7-21')
democratic_nomination_date <- as.Date('2016-7-28')
republican_caucuses_date <- as.Date('2016-2-20')
democratic_caucuses_date <- as.Date('2016-3-26')
hillary_email <- as.Date('2016-7-22')
ggplot(wa %>%
subset(!is.na(per_capita_income)) %>%
subset(cand_nm == "Clinton, Hillary Rodham" | cand_nm == "Trump, Donald J.") %>%
mutate(income_cut = cut(per_capita_income,
breaks = quantile(per_capita_income,
probs = c(0, .2, .35, .5, .65, .8, 1)),
include.lowest = T, include.highest = T)),
aes(contb_receipt_dt)) +
scale_x_date(limits = as.Date(c('2015-03-01','2016-11-8')),
date_breaks = "1 month", date_labels =  "%b %Y") +
geom_freqpoly(aes(color = cand_nm), binwidth = 7) +
geom_vline(xintercept=elec_date, color="purple") +
geom_vline(xintercept=republican_nomination_date, color="red") +
geom_vline(xintercept=democratic_nomination_date, color="blue") +
geom_vline(xintercept=republican_caucuses_date, color="red") +
geom_vline(xintercept=democratic_caucuses_date, color="blue") +
geom_vline(xintercept=hillary_email, color="gold") +
facet_wrap(~income_cut, ncol = 1, scales = "free_y") +
theme(axis.text.x=element_text(angle=60, hjust=1))
mapdata.wa <- zip.map %>%
filter(region %in% wa$contbr_zip) %>%
arrange(order)
ggplot() +
geom_map(data = mapdata.wa, map = mapdata.wa,
aes(map_id = region, x = long, y = lat, group = group),
fill = "white", color = "lightgrey") +
geom_map(data = wa.amt_by_zip_party, map = mapdata.wa,
aes(map_id = zipcode,
fill = ifelse(amt_democrat_sum < amt_republican_sum,
'red', 'blue')),
color = "lightgray") +
coord_map(projection = "mercator") +
geom_point(data = city.wa,
aes(x = lng, y = lat),
size = log10(city.wa$population),
color = 'gold', alpha = 0.4) +
scale_fill_manual(label = c('republican', 'democratic'),
values = c("red", "blue")) +
theme_map() +
theme(legend.position = "bottom")
ggplot() +
geom_map(data = mapdata.wa, map = mapdata.wa,
aes(map_id = region, x = long, y = lat, group = group),
fill = "white", color = "lightgrey") +
geom_map(data = wa.amt_by_zip_party, map = mapdata.wa,
aes(map_id = zipcode,
fill = ifelse(amt_democrat_n < amt_republican_n,
'red', 'blue')),
color = "lightgray") +
coord_map(projection = "mercator") +
geom_point(data = city.wa,
aes(x = lng, y = lat),
size = log10(city.wa$population),
color = 'gold', alpha = 0.4) +
scale_fill_manual(label = c('republican', 'democratic'),
values = c("red", "blue")) +
theme_map() +
theme(legend.position = "bottom")
ggplot() +
geom_map(data = mapdata.wa, map = mapdata.wa,
aes(map_id = region, x = long, y = lat, group = group),
fill = "white", color = "lightgrey") +
geom_map(data = wa.amt_trump_hillary, map = mapdata.wa,
aes(map_id = zipcode,
fill = ifelse(trump_n > hillary_n,
'red', 'blue')),
color = "lightgray") +
coord_map(projection = "mercator") +
geom_point(data = city.wa,
aes(x = lng, y = lat),
size = log10(city.wa$population),
color = 'gold', alpha = 0.2) +
scale_fill_manual(label = c('Trump', 'Hillary'),
values = c("red", "blue")) +
theme_map() +
theme(legend.position = "bottom")
ggplot() +
geom_map(data = mapdata.wa, map = mapdata.wa,
aes(map_id = region, x = long, y = lat, group = group),
fill = "white", color = "lightgrey") +
geom_map(data = wa.amt_trump_hillary, map = mapdata.wa,
aes(map_id = zipcode,
fill = ifelse(trump_sum > hillary_sum,
'red', 'blue')),
color = "lightgray") +
coord_map(projection = "mercator") +
geom_point(data = city.wa,
aes(x = lng, y = lat),
size = log10(city.wa$population),
color = 'gold', alpha = 0.4) +
scale_fill_manual(label = c('Trump', 'Hillary'),
values = c("red", "blue")) +
theme_map() +
theme(legend.position = "bottom")
m5
cand_color = rep("blue", 21)
cand_color[c(4, 6, 18)] <- "red"
ggplot(wa %>%
subset(party != "others" & median_age >= 18) %>%
subset(!is.na(median_age) & !is.na(contbr_gender) ) %>%
mutate(age_cut = cut(median_age, breaks = c(18, 25, 35, 45, 60, 80),
include.lowest = T, include.highest = T)),
aes(cand_nm, contb_receipt_amt)) +
geom_boxplot(aes(color = contbr_gender),
alpha = 0.05, cex = 0.1) +
scale_y_log10() +
scale_color_manual(label = c("male", "female"),
values = c("blue", "red")) +
facet_wrap(~age_cut, ncol = 1) +
labs(title = "Donator's age and gender structure for Candidate",
x = "Candidate", y = "Contribution(log)") +
theme(axis.text.x=element_text(angle=60, hjust=1,
color = cand_color),
legend.position = 'bottom')
elec_date <- as.Date('2016-11-8')
republican_nomination_date <- as.Date('2016-7-21')
democratic_nomination_date <- as.Date('2016-7-28')
republican_caucuses_date <- as.Date('2016-2-20')
democratic_caucuses_date <- as.Date('2016-3-26')
hillary_email <- as.Date('2016-7-22')
ggplot(wa %>%
subset(cand_nm == "Clinton, Hillary Rodham" | cand_nm == "Trump, Donald J.") %>%
mutate(amt_cut = cut(contb_receipt_amt, breaks = c(0, 200, 500, 1000, 1500, 2700),
include.lowest = T, include.highest = T)),
aes(contb_receipt_dt)) +
scale_x_date(limits = as.Date(c('2015-03-01','2016-11-8')),
date_breaks = "1 month", date_labels =  "%b %Y") +
geom_freqpoly(aes(color = cand_nm), binwidth = 7) +
geom_vline(xintercept=elec_date, color="purple") +
geom_vline(xintercept=republican_nomination_date, color="red") +
geom_vline(xintercept=democratic_nomination_date, color="blue") +
geom_vline(xintercept=republican_caucuses_date, color="red") +
geom_vline(xintercept=democratic_caucuses_date, color="blue") +
geom_vline(xintercept=hillary_email, color="gold") +
facet_wrap(~amt_cut, ncol = 1, scales = "free_y") +
labs(title = "Contribution Trend", x = "Date", y = "Count") +
theme(axis.text.x=element_text(angle=60, hjust=1))
ggplot() +
geom_map(data = mapdata.wa, map = mapdata.wa,
aes(map_id = region, x = long, y = lat, group = group),
fill = "white", color = "lightgrey") +
geom_map(data = wa.amt_trump_hillary, map = mapdata.wa,
aes(map_id = zipcode,
fill = ifelse(trump_sum > hillary_sum,
'red', 'blue')),
color = "lightgray") +
coord_map(projection = "mercator") +
geom_point(data = city.wa,
aes(x = lng, y = lat),
size = log10(city.wa$population),
color = 'gold', alpha = 0.4) +
scale_fill_manual(label = c('Trump', 'Hillary'),
values = c("red", "blue")) +
theme_map() +
labs(title = "Contribution Map", fill = "Candidate") +
theme(legend.position = "bottom")
hillary_occupation_amt <- wa.amt_occupation_hillary %>%
subset(contbr_occupation != "RETIRED" & contbr_occupation != "INFORMATION REQUESTED") %>%
head(20)
trump_occupation_amt <- wa.amt_occupation_trump %>%
subset(contbr_occupation != "RETIRED" & contbr_occupation != "INFORMATION REQUESTED") %>%
head(20)
p1 <- ggplot(hillary_occupation_amt, aes(reorder(contbr_occupation, n), n)) +
geom_bar(stat = "identity", aes(fill = contbr_occupation)) +
coord_flip() +
labs(title = "Occupation of Hillary's donator ", x = "Occupation", y = "count",
fill ="Occupation")
p2 <- ggplot(trump_occupation_amt, aes(reorder(contbr_occupation, n), n)) +
geom_bar(stat = "identity", aes(fill = contbr_occupation)) +
coord_flip() +
labs(title = "Occupation of Trump's donator ", x = "Occupation", y = "count",
fill = "Occupation")
grid.arrange(p1, p2)
ggplot(subset(city_freq, Freq > 2000), aes(Var1, Freq)) +
geom_bar(stat = 'identity') +
coord_flip() +
theme(axis.text.y = element_text(hjust = 0, size = 10),
plot.margin = margin(0.1, 0.1, 0.1, 0.1))
```{r echo=FALSE}
ggplot(subset(city_freq, Freq > 2000), aes(Var1, Freq)) +
geom_bar(stat = 'identity') +
coord_flip() +
theme(axis.text.y = element_text(hjust = 0, size = 10),
plot.margin = margin(0.1, 0.1, 0.1, 0.1))
library(ggplot2)
install.packages('ggplot2')
install.packages("dplyr")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("devtools")
library(devtools)
install_github('arilamstein/choroplethrZip@v1.5.0')
library(devtools)
library(ggplot2)
library(dplyr)
library(polycor)
library(stringr)
library(lubridate)
library(GGally)
library(gridExtra)
library(ggthemes)
library(memisc)
library(gender)
install.packages("gender", dependencies = T)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("polycor", dependencies = T)
install.packages("devtools")
library(devtools)
install_github('arilamstein/choroplethrZip@v1.5.0')
install.packages("devtools")
library(devtools)
install_github('arilamstein/choroplethrZip@v1.5.0')
library(devtools)
install_github('arilamstein/choroplethrZip@v1.5.0')
library(ggplot2)
library(dplyr)
library(polycor)
library(stringr)
library(lubridate)
library(GGally)
library(gridExtra)
library(ggthemes)
library(memisc)
library(gender)
ggplot(wa %>%
subset(cand_nm == "Clinton, Hillary Rodham" | cand_nm == "Trump, Donald J.") %>%
mutate(amt_cut = cut(contb_receipt_amt, breaks = c(0, 200, 500, 1000, 1500, 2700),
include.lowest = T, include.highest = T)),
aes(contb_receipt_dt)) +
scale_x_date(limits = as.Date(c('2015-03-01','2016-11-8')),
date_breaks = "1 month", date_labels =  "%b %Y") +
geom_freqpoly(aes(color = cand_nm), binwidth = 7) +
geom_vline(xintercept=elec_date, color="purple") +
geom_vline(xintercept=republican_nomination_date, color="red") +
geom_vline(xintercept=democratic_nomination_date, color="blue") +
geom_vline(xintercept=republican_caucuses_date, color="lightred") +
geom_vline(xintercept=democratic_caucuses_date, color="lightblue") +
geom_vline(xintercept=hillary_email, color="gold") +
facet_wrap(~amt_cut, ncol = 1, scales = "free_y") +
scale_color_manual(name = "Big Day",
label = c("election date", "republican nomination day",
"democratic nomination day", "republican caucuses day",
"Hillary email leak day"),
values = c("purple", "red", "blue", "lightblue","lightblue", "gold"))
# At first, I try read.csv('P00000001-WA.csv', row.names = NULL) to read the data, but it still use first column as row names. Consequently, I use python to delete some useless columns like transaction id and some text and then add index column so it can be read correctly by R.
wa <- read.csv('selected.csv')
wa <- subset(wa, select = -X)
# http://simplemaps.com/data/us-cities
city = read.csv('uscitiesv1.3.csv')
city.wa <- subset(city, state_id == 'WA')
data("df_zip_demographics")
data("zip.map")
data("zipcode")
elec_date <- as.Date('2016-11-8')
republican_nomination_date <- as.Date('2016-7-21')
democratic_nomination_date <- as.Date('2016-7-28')
republican_caucuses_date <- as.Date('2016-2-20')
democratic_caucuses_date <- as.Date('2016-3-26')
hillary_email <- as.Date('2016-7-22')
ggplot(wa %>%
subset(cand_nm == "Clinton, Hillary Rodham" | cand_nm == "Trump, Donald J.") %>%
mutate(amt_cut = cut(contb_receipt_amt, breaks = c(0, 200, 500, 1000, 1500, 2700),
include.lowest = T, include.highest = T)),
aes(contb_receipt_dt)) +
scale_x_date(limits = as.Date(c('2015-03-01','2016-11-8')),
date_breaks = "1 month", date_labels =  "%b %Y") +
geom_freqpoly(aes(color = cand_nm), binwidth = 7) +
geom_vline(xintercept=elec_date, color="purple") +
geom_vline(xintercept=republican_nomination_date, color="red") +
geom_vline(xintercept=democratic_nomination_date, color="blue") +
geom_vline(xintercept=republican_caucuses_date, color="lightred") +
geom_vline(xintercept=democratic_caucuses_date, color="lightblue") +
geom_vline(xintercept=hillary_email, color="gold") +
facet_wrap(~amt_cut, ncol = 1, scales = "free_y") +
scale_color_manual(name = "Big Day",
label = c("election date", "republican nomination day",
"democratic nomination day", "republican caucuses day",
"Hillary email leak day"),
values = c("purple", "red", "blue", "lightblue", "lightblue", "gold"))
elec_date <- as.Date('2016-11-8')
republican_nomination_date <- as.Date('2016-7-21')
democratic_nomination_date <- as.Date('2016-7-28')
republican_caucuses_date <- as.Date('2016-2-20')
democratic_caucuses_date <- as.Date('2016-3-26')
hillary_email <- as.Date('2016-7-22')
ggplot(wa %>%
subset(cand_nm == "Clinton, Hillary Rodham" | cand_nm == "Trump, Donald J.") %>%
mutate(amt_cut = cut(contb_receipt_amt, breaks = c(0, 200, 500, 1000, 1500, 2700),
include.lowest = T, include.highest = T)),
aes(contb_receipt_dt)) +
scale_x_date(limits = as.Date(c('2015-03-01','2016-11-8')),
date_breaks = "1 month", date_labels =  "%b %Y") +
geom_freqpoly(aes(color = cand_nm), binwidth = 7) +
geom_vline(xintercept=elec_date, color="purple") +
geom_vline(xintercept=republican_nomination_date, color="red") +
geom_vline(xintercept=democratic_nomination_date, color="blue") +
geom_vline(xintercept=republican_caucuses_date, color="lightred") +
geom_vline(xintercept=democratic_caucuses_date, color="lightblue") +
geom_vline(xintercept=hillary_email, color="gold") +
facet_wrap(~amt_cut, ncol = 1, scales = "free_y") +
scale_color_manual(name = "Big Day",
label = c("election date", "republican nomination day",
"democratic nomination day", "republican caucuses day",
"Hillary email leak day"),
values = c("purple", "red", "blue", "lightblue", "lightblue", "gold"))
Sys.setlocale("LC_TIME", "C")
wa$contb_receipt_dt <- as.Date(wa$contb_receipt_dt,format = "%d-%b-%y")
ggplot(wa %>%
subset(cand_nm == "Clinton, Hillary Rodham" | cand_nm == "Trump, Donald J.") %>%
mutate(amt_cut = cut(contb_receipt_amt, breaks = c(0, 200, 500, 1000, 1500, 2700),
include.lowest = T, include.highest = T)),
aes(contb_receipt_dt)) +
scale_x_date(limits = as.Date(c('2015-03-01','2016-11-8')),
date_breaks = "1 month", date_labels =  "%b %Y") +
geom_freqpoly(aes(color = cand_nm), binwidth = 7) +
geom_vline(xintercept=elec_date, color="purple") +
geom_vline(xintercept=republican_nomination_date, color="red") +
geom_vline(xintercept=democratic_nomination_date, color="blue") +
geom_vline(xintercept=republican_caucuses_date, color="lightred") +
geom_vline(xintercept=democratic_caucuses_date, color="lightblue") +
geom_vline(xintercept=hillary_email, color="gold") +
facet_wrap(~amt_cut, ncol = 1, scales = "free_y") +
scale_color_manual(name = "Big Day",
label = c("election date", "republican nomination day",
"democratic nomination day", "republican caucuses day",
"Hillary email leak day"),
values = c("purple", "red", "blue", "lightblue", "lightblue", "gold"))
ggplot(wa %>%
subset(cand_nm == "Clinton, Hillary Rodham" | cand_nm == "Trump, Donald J.") %>%
mutate(amt_cut = cut(contb_receipt_amt, breaks = c(0, 200, 500, 1000, 1500, 2700),
include.lowest = T, include.highest = T)),
aes(contb_receipt_dt)) +
scale_x_date(limits = as.Date(c('2015-03-01','2016-11-8')),
date_breaks = "1 month", date_labels =  "%b %Y") +
geom_freqpoly(aes(color = cand_nm), binwidth = 7) +
geom_vline(xintercept=elec_date, color="purple") +
geom_vline(xintercept=republican_nomination_date, color="red") +
geom_vline(xintercept=democratic_nomination_date, color="blue") +
geom_vline(xintercept=republican_caucuses_date, color="#fc8d59") +
geom_vline(xintercept=democratic_caucuses_date, color="lightblue") +
geom_vline(xintercept=hillary_email, color="gold") +
facet_wrap(~amt_cut, ncol = 1, scales = "free_y") +
scale_color_manual(name = "Big Day",
label = c("election date", "republican nomination day",
"democratic nomination day", "republican caucuses day",
"Hillary email leak day"),
values = c("purple", "red", "blue", "#fc8d59", "lightblue", "gold"))
ggplot(wa %>%
subset(!is.na(per_capita_income)) %>%
subset(cand_nm == "Clinton, Hillary Rodham" | cand_nm == "Trump, Donald J.") %>%
mutate(income_cut = cut(per_capita_income,
breaks = quantile(per_capita_income,
probs = c(0, .2, .35, .5, .65, .8, 1)),
include.lowest = T, include.highest = T)),
aes(contb_receipt_dt)) +
scale_x_date(limits = as.Date(c('2015-03-01','2016-11-8')),
date_breaks = "1 month", date_labels =  "%b %Y") +
geom_freqpoly(aes(color = cand_nm), binwidth = 7) +
geom_vline(xintercept=elec_date, color="purple",
linetype="dashed",
labels="Election Day",
show_guide=TRUE) +
geom_vline(xintercept=republican_nomination_date, color="red",
linetype="dashed",
labels="Republican Nomination Day",
show_guide=TRUE) +
geom_vline(xintercept=democrat_nomination_date, color="blue",
linetype="dashed",
labels="Democrat Nomination Day",
show_guide=TRUE) +
geom_vline(xintercept=republican_caucuses_date, color="#DC143C",
linetype="dashed",
labels="Republican Caucuses Day",
show_guide=TRUE) +
geom_vline(xintercept=democratic_caucuses_date, color="lightblue",
linetype="dashed",
labels="Democrat Caucuses Day",
show_guide=T) +
geom_vline(xintercept=hillary_email, color="gold",
linetype="dashed",
labels="Hillary Email Day",
show_guide=T) +
facet_wrap(~income_cut, ncol = 1, scales = "free_y") +
theme(axis.text.x=element_text(angle=60, hjust=1))
ggplot(wa %>%
subset(!is.na(per_capita_income)) %>%
subset(cand_nm == "Clinton, Hillary Rodham" | cand_nm == "Trump, Donald J.") %>%
mutate(income_cut = cut(per_capita_income,
breaks = quantile(per_capita_income,
probs = c(0, .2, .35, .5, .65, .8, 1)),
include.lowest = T, include.highest = T)),
aes(contb_receipt_dt)) +
scale_x_date(limits = as.Date(c('2015-03-01','2016-11-8')),
date_breaks = "1 month", date_labels =  "%b %Y") +
geom_freqpoly(aes(color = cand_nm), binwidth = 7) +
geom_vline(xintercept=elec_date, color="purple",
linetype="dashed",
labels="Election Day",
show_guide=TRUE) +
geom_vline(xintercept=republican_nomination_date, color="red",
linetype="dashed",
labels="Republican Nomination Day",
show_guide=TRUE) +
geom_vline(xintercept=democrat_nomination_date, color="blue",
linetype="dashed",
labels="Democrat Nomination Day",
show_guide=TRUE) +
geom_vline(xintercept=republican_caucuses_date, color="#DC143C",
linetype="dashed",
labels="Republican Caucuses Day",
show_guide=TRUE) +
geom_vline(xintercept=democratic_caucuses_date, color="lightblue",
linetype="dashed",
labels="Democrat Caucuses Day",
show_guide=T) +
geom_vline(xintercept=hillary_email, color="gold",
linetype="dashed",
labels="Hillary Email Day",
show_guide=T) +
facet_wrap(~income_cut, ncol = 1, scales = "free_y") +
theme(axis.text.x=element_text(angle=60, hjust=1))
ggplot(wa %>%
subset(!is.na(per_capita_income)) %>%
subset(cand_nm == "Clinton, Hillary Rodham" | cand_nm == "Trump, Donald J.") %>%
mutate(income_cut = cut(per_capita_income,
breaks = quantile(per_capita_income,
probs = c(0, .2, .35, .5, .65, .8, 1)),
include.lowest = T, include.highest = T)),
aes(contb_receipt_dt)) +
scale_x_date(limits = as.Date(c('2015-03-01','2016-11-8')),
date_breaks = "1 month", date_labels =  "%b %Y") +
geom_freqpoly(aes(color = cand_nm), binwidth = 7) +
geom_vline(xintercept=elec_date, color="purple",
linetype="dashed",
labels="Election Day",
show_guide=TRUE) +
geom_vline(xintercept=republican_nomination_date, color="red",
linetype="dashed",
labels="Republican Nomination Day",
show_guide=TRUE) +
geom_vline(xintercept=democrat_nomination_date, color="blue",
linetype="dashed",
labels="Democrat Nomination Day",
show_guide=TRUE) +
geom_vline(xintercept=republican_caucuses_date, color="#DC143C",
linetype="dashed",
labels="Republican Caucuses Day",
show_guide=TRUE) +
geom_vline(xintercept=democratic_caucuses_date, color="lightblue",
linetype="dashed",
labels="Democrat Caucuses Day",
show_guide=T) +
geom_vline(xintercept=hillary_email, color="gold",
linetype="dashed",
labels="Hillary Email Day",
show_guide=T) +
facet_wrap(~income_cut, ncol = 1, scales = "free_y") +
theme(axis.text.x=element_text(angle=60, hjust=1))
head(wa)
demographics.wa <- filter(df_zip_demographics, region %in% wa$contbr_zip)
data("df_zip_demographics")
data("zip.map")
data("zipcode")
demographics.wa <- filter(df_zip_demographics, region %in% wa$contbr_zip)
data("df_zip_demographics")
library(zipcode)
?df_zip_demographics
library(ggplot2)
library(dplyr)
library(polycor)
library(stringr)
library(lubridate)
library(GGally)
library(gridExtra)
library(ggthemes)
library(memisc)
library(gender)
install.packages("gender", dependencies = T)
library(gender)
library(zipcode)
library(corrplot)
library(choroplethrZip)
library(devtools)
install_github('arilamstein/choroplethrZip@v1.5.0')
install.packages("acs", dependencies = T)
install.packages("choroplethr", dependencies = T)
install_github('arilamstein/choroplethrZip@v1.5.0')
# At first, I try read.csv('P00000001-WA.csv', row.names = NULL) to read the data, but it still use first column as row names. Consequently, I use python to delete some useless columns like transaction id and some text and then add index column so it can be read correctly by R.
wa <- read.csv('selected.csv')
wa <- subset(wa, select = -X)
# http://simplemaps.com/data/us-cities
city = read.csv('uscitiesv1.3.csv')
city.wa <- subset(city, state_id == 'WA')
data("df_zip_demographics")
data("zip.map")
data("zipcode")
demographics.wa <- filter(df_zip_demographics, region %in% wa$contbr_zip)
